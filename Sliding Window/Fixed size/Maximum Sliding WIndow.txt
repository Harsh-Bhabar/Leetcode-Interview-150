class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int> ans;    
        int i = 0 ;
        int j = 0 ;
        deque<int> dq; // index of nums

        while( j < n ){
            if(dq.empty()){ 
                // we need something
                dq.push_back(j);
            }else{ 
                // remove the element from queue if element at back is smaller
                while(!dq.empty() && nums[dq.back()] < nums[j]){
                    dq.pop_back();
                }
                dq.push_back(j);
            }

            if(j-i+1 == k){
                ans.push_back(nums[dq.front()]);
                if(dq.front() == i){
                    dq.pop_front();
                }
                i++;
            }

            j++;
        }

        return ans;   
    }
};